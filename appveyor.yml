build: off
stack: node 14, python 3.9, jdk 8, go 1.17
skip_tags: true
environment:
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      PYTHON_HOME: "C:\\Python38"
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu

  nodejs_version: "14"

  GOPATH: c:\gopath
  GOVERSION: 1.17.4
  GOROOT: c:\Program Files\Go
  # Added in order to prevent fetching the outdated dependencies versions from go cache.
  GOPROXY: direct
  GO111MODULE: on
  CGO_ENABLED: 0

  ADO_JFROG_PLATFORM_URL:
    secure: RIh0gGFDn2JAnLUEEqLsQtJTP8G8Takh7Hlksn28wbk
  ADO_JFROG_PLATFORM_USERNAME:
    secure: YEB5Wiv9a2vNpUhy+MfL+A==
  ADO_JFROG_PLATFORM_PASSWORD:
    secure: Um8o75MQIieSavIemF4ySA==

install:
  - cmd: set PATH=%PYTHON_HOME%;%PYTHON_HOME%\Scripts;%PATH%
  - python -m pip install --upgrade pip
  - cmd: powershell Install-Product node $env:nodejs_version
  - npm i -gq jfrog-cli-v2-jf
  - pip install conan -q
  - cmd: nuget update -self
  - sh: conan profile new default --detect # This command produces a warning that is handled by the following command.
  - sh: conan profile update settings.compiler.libcxx=libc++ default
  # Download requested golang version:
  - cmd: rmdir c:\go /s /q
  - cmd: appveyor DownloadFile https://storage.googleapis.com/golang/go%GOVERSION%.windows-amd64.msi
  - cmd: msiexec /i go%GOVERSION%.windows-amd64.msi /q
  - cmd: set PATH=%GOPATH%\bin;c:\Program Files\Go\bin;%PATH%
  - cmd: go version

services:
  - docker

test_script:
  - jf -v
  - cmake --version
  - go version
  - pip -V
  - python -V
  - conan -v
  - node --version
  - npm --version
  - npm t
  - npm run create # Assert the extension is created successfully
  - npm run lint # Assert code is linted
