{
    "id": "bf0e8eea-ad19-4b7d-8415-374d83397de5",
    "name": "JFrogGo",
    "friendlyName": "JFrog Go",
    "description": "Build and publish go packages from and to Artifactory while allowing to collect build-info. The collected build-info can be later published to Artifactory by the \"JFrog Publish Build Info\" task.",
    "author": "JFrog",
    "helpMarkDown": "[More Information](https://www.jfrog.com/confluence/display/JFROG/JFrog+Azure+DevOps+Extension#JFrogAzureDevOpsExtension-TriggeringGoBuilds)",
    "category": "Utility",
    "visibility": [
        "Build",
        "Release"
    ],
    "version": {
        "Major": "1",
        "Minor": "3",
        "Patch": "0"
    },
    "demands": [],
    "minimumAgentVersion": "1.91.0",
    "instanceNameFormat": "JFrog Go $(command)",
    "groups": [
        {
            "name": "advanced",
            "displayName": "Advanced",
            "isExpanded": false
        }
    ],
    "inputs": [
        {
            "name": "command",
            "type": "pickList",
            "label": "Command",
            "defaultValue": "build",
            "helpMarkDown": "The Go command to run.",
            "required": "true",
            "properties": {
                "EditableOptions": "False"
            },
            "options": {
                "build": "build",
                "test": "test",
                "get": "get",
                "publish": "publish",
                "custom": "custom"
            }
        },
        {
            "name": "customCommand",
            "type": "string",
            "label": "Go command to execute",
            "visibleRule": "command = custom",
            "required": true,
            "defaultValue": "",
            "helpMarkDown": "A custom Go command to execute. For example, to execute 'go version', enter 'version'."
        },
        {
            "name": "goArguments",
            "type": "string",
            "label": "Arguments",
            "defaultValue": "",
            "required": false,
            "visibleRule": "command != publish",
            "helpMarkDown": "Optional arguments to the selected command. For example, build-time arguments for the 'go build' command."
        },
        {
            "name": "version",
            "type": "string",
            "label": "Version",
            "defaultValue": "",
            "required": true,
            "visibleRule": "command = publish",
            "helpMarkDown": "The version of the Go project that is being published."
        },
        {
            "name": "artifactoryConnection",
            "type": "connectedService:jfrogArtifactoryService",
            "label": "Artifactory service connection",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Artifactory service to be used by this task."
        },
        {
            "name": "resolutionRepo",
            "type": "pickList",
            "label": "Go dependencies resolution repository",
            "defaultValue": "",
            "required": true,
            "visibleRule": "command != publish",
            "helpMarkDown": "The Go dependencies resolution repository.\nA virtual Go repository.",
            "properties": {
                "EditableOptions": "True"
            }
        },
        {
            "name": "targetRepo",
            "type": "pickList",
            "label": "Go target repository",
            "defaultValue": "",
            "required": true,
            "visibleRule": "command = publish",
            "helpMarkDown": "The target Go repository\nCan be a local repository or a virtual Go repository with a Default Deployment Repository.",
            "properties": {
                "EditableOptions": "True"
            }
        },
        {
            "name": "collectBuildInfo",
            "type": "boolean",
            "label": "Collect build info",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "Select to collect build info and store it locally.\nThe build info can be later published to Artifactory using the \"JFrog Publish Build Info\" task."
        },
        {
            "name": "buildName",
            "type": "string",
            "label": "Build name",
            "defaultValue": "$(Build.DefinitionName)",
            "required": true,
            "visibleRule": "collectBuildInfo=true",
            "helpMarkDown": "Build name.\nTo use the default build name of the pipeline, set the field to '$(Build.DefinitionName)'.\nThe collected build-info should be published to Artifactory using the 'JFrog Publish Build Info' task."
        },
        {
            "name": "buildNumber",
            "type": "string",
            "label": "Build number",
            "defaultValue": "$(Build.BuildNumber)",
            "required": true,
            "visibleRule": "collectBuildInfo=true",
            "helpMarkDown": "Build number.\nTo use the default build number of the pipeline, set the field to '$(Build.BuildNumber)'.\nThe collected build-info should be published to Artifactory using the 'JFrog Publish Build Info' task."
        },
        {
            "name": "projectKey",
            "type": "string",
            "label": "Project key",
            "defaultValue": "",
            "required": false,
            "visibleRule": "collectBuildInfo=true",
            "helpMarkDown": "JFrog project key."
        },
        {
            "name": "includeEnvVars",
            "type": "boolean",
            "label": "Include environment variables",
            "defaultValue": "false",
            "required": false,
            "visibleRule": "collectBuildInfo=true",
            "helpMarkDown": "Select to include environment variables in the published build info."
        },
        {
            "name": "workingDirectory",
            "type": "filePath",
            "label": "Working Directory.",
            "defaultValue": "",
            "required": false,
            "groupName": "advanced",
            "helpMarkDown": "The working directory where the command will run. When empty, the root of the repository (for builds) or artifacts (for releases) is used, which is the value of '$(System.DefaultWorkingDirectory)'."
        }
    ],
    "dataSourceBindings": [
        {
            "endpointId": "$(artifactoryConnection)",
            "endpointURL": "{{endpoint.url}}/api/repositories",
            "target": "resolutionRepo",
            "resultSelector": "jsonpath:$[?(@.type=='VIRTUAL')]",
            "resultTemplate": "{ \"Value\" : \"{{{key}}}\", \"DisplayValue\" : \"{{{key}}}\" }"
        },
        {
            "endpointId": "$(artifactoryConnection)",
            "endpointURL": "{{endpoint.url}}/api/repositories",
            "target": "targetRepo",
            "resultSelector": "jsonpath:$[?(@.type=='LOCAL' || @.type=='VIRTUAL')]",
            "resultTemplate": "{ \"Value\" : \"{{{key}}}\", \"DisplayValue\" : \"{{{key}}}\" }"
        }
    ],
    "execution": {
        "Node10": {
            "target": "goBuild.js"
        }
    }
}