{
    "id": "c288dcae-5ae4-4a37-a59d-11bb07d393a9",
    "name": "JFrogGenericArtifacts",
    "friendlyName": "JFrog Generic Artifacts",
    "description": "Run generic commands with Artifactory using FileSpecs, while allowing to collect build-info. The collected build-info can be later published to Artifactory by the \"JFrog Publish Build Info\" task.",
    "author": "JFrog",
    "helpMarkDown": "[More Information](https://www.jfrog.com/confluence/display/JFROG/JFrog+Azure+DevOps+Extension#JFrogAzureDevOpsExtension-ManagingGenericArtifacts)",
    "category": "Utility",
    "visibility": [
        "Build",
        "Release"
    ],
    "demands": [],
    "version": {
        "Major": "1",
        "Minor": "3",
        "Patch": "0"
    },
    "minimumAgentVersion": "1.83.0",
    "instanceNameFormat": "JFrog Generic Artifacts $(command)",
    "groups": [
        {
            "name": "advancedDownload",
            "displayName": "Download Settings",
            "isExpanded": false,
            "visibleRule": "command = Download"
        },
        {
            "name": "advancedUpload",
            "displayName": "Upload Settings",
            "isExpanded": false,
            "visibleRule": "command = Upload"
        },
        {
            "name": "advancedCommon",
            "displayName": "Advanced",
            "isExpanded": false
        }
    ],
    "inputs": [
        {
            "name": "command",
            "type": "pickList",
            "label": "Command",
            "defaultValue": "",
            "options": {
                "Upload": "Upload",
                "Download": "Download",
                "Set Properties": "Set Properties",
                "Delete Properties": "Delete Properties",
                "Move": "Move",
                "Copy": "Copy",
                "Delete": "Delete"
            },
            "required": true,
            "helpMarkDown": "The generic command to be run by this task."
        },
        {
            "name": "connection",
            "type": "connectedService:jfrogArtifactoryService",
            "label": "Artifactory service connection",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Artifactory service to be used by this task."
        },
        {
            "name": "setProps",
            "type": "string",
            "label": "Properties to set",
            "visibleRule": "command=Set Properties",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "The list of properties, in the form of key1=value1;key2=value2,..., to be set on the matching artifacts."
        },
        {
            "name": "deleteProps",
            "type": "string",
            "label": "Properties to delete",
            "visibleRule": "command=Delete Properties",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "The list of properties, in the form of key1,key2,..., to be deleted from the matching artifacts."
        },
        {
            "name": "specSource",
            "type": "radio",
            "label": "File spec source",
            "required": true,
            "defaultValue": "taskConfiguration",
            "helpMarkDown": "To specify the affected files in Artifactory, please create a File Spec. \nTo read more about the File Spec schema click <a href=\"https://www.jfrog.com/confluence/display/CLI/CLI+for+JFrog+Artifactory#CLIforJFrogArtifactory-UsingFileSpecs\" target=\"_blank\">here</a>.",
            "options": {
                "taskConfiguration": "Task Configuration",
                "file": "File"
            }
        },
        {
            "name": "fileSpec",
            "type": "multiLine",
            "label": "Spec",
            "visibleRule": "specSource=taskConfiguration",
            "defaultValue": "{\n  \"files\": [\n    {\n      \"pattern\": \"REPLACE_ME\",\n      \"target\": \"REPLACE_ME\"\n    }\n  ]\n}",
            "properties": {
                "resizable": "true",
                "rows": "10",
                "maxLength": "10000"
            },
            "helpMarkDown": "Use file spec from task configuration."
        },
        {
            "name": "file",
            "type": "filePath",
            "label": "File path",
            "visibleRule": "specSource=file",
            "helpMarkDown": "Use file spec from a local file."
        },
        {
            "name": "replaceSpecVars",
            "type": "boolean",
            "label": "Replace spec variables",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "Select to replace variables in your File Spec.\nIn the File Spec, the variables should be used as follows: ${key1}."
        },
        {
            "name": "specVars",
            "type": "string",
            "label": "Spec vars",
            "defaultValue": "",
            "required": false,
            "visibleRule": "replaceSpecVars=true",
            "helpMarkDown": "List of Spec vars.\nList of variables in the form of \"key1=value1;key2=value2;...\" to be replaced in the File Spec."
        },
        {
            "name": "collectBuildInfo",
            "type": "boolean",
            "label": "Collect build info",
            "defaultValue": "false",
            "required": false,
            "visibleRule": "command=Upload || command=Download",
            "helpMarkDown": "Select to collect build info and store it locally.\nThe build info can be later published to Artifactory using the \"JFrog Publish Build Info\" task."
        },
        {
            "name": "buildName",
            "type": "string",
            "label": "Build name",
            "defaultValue": "$(Build.DefinitionName)",
            "required": true,
            "visibleRule": "collectBuildInfo=true",
            "helpMarkDown": "Build name.\nTo use the default build name of the pipeline, set the field to '$(Build.DefinitionName)'.\nThe collected build-info should be published to Artifactory using the 'JFrog Publish Build Info' task."
        },
        {
            "name": "buildNumber",
            "type": "string",
            "label": "Build number",
            "defaultValue": "$(Build.BuildNumber)",
            "required": true,
            "visibleRule": "collectBuildInfo=true",
            "helpMarkDown": "Build number.\nTo use the default build number of the pipeline, set the field to '$(Build.BuildNumber)'.\nThe collected build-info should be published to Artifactory using the 'JFrog Publish Build Info' task."
        },
        {
            "name": "module",
            "type": "string",
            "label": "Module name",
            "defaultValue": "",
            "required": false,
            "visibleRule": "collectBuildInfo=true",
            "helpMarkDown": "Module name.\nOptional module name for the build-info.\nThe collected build-info should be published to Artifactory using the 'JFrog Publish Build Info' task."
        },
        {
            "name": "projectKey",
            "type": "string",
            "label": "Project key",
            "defaultValue": "",
            "required": false,
            "visibleRule": "collectBuildInfo=true",
            "helpMarkDown": "JFrog project key."
        },
        {
            "name": "includeEnvVars",
            "type": "boolean",
            "label": "Include environment variables",
            "defaultValue": "false",
            "required": false,
            "visibleRule": "collectBuildInfo=true",
            "helpMarkDown": "Select to include environment variables in the published build info."
        },
        {
            "name": "dryRun",
            "type": "boolean",
            "label": "Dry run",
            "defaultValue": "false",
            "required": false,
            "visibleRule": "command!=Set Properties && command!=Delete Properties",
            "helpMarkDown": "Select if you'd like the task to only indicates which artifacts would have been affected.\nIf not, the command is fully executed as specified"
        },
        {
            "name": "failNoOp",
            "type": "boolean",
            "label": "Fail task if no files were affected",
            "defaultValue": true,
            "required": true,
            "helpMarkDown": "Select if you'd like the task to fail if no files were affected."
        },
        {
            "name": "insecureTls",
            "type": "boolean",
            "label": "Skip TLS certificates verification",
            "defaultValue": "false",
            "required": false,
            "groupName": "advancedCommon"
        },
        {
            "name": "threads",
            "type": "pickList",
            "label": "# of threads",
            "defaultValue": "3",
            "required": false,
            "groupName": "advancedCommon",
            "helpMarkDown": "The number of parallel threads that should be used.",
            "options": {
                "1": "1",
                "2": "2",
                "3": "3",
                "4": "4",
                "5": "5",
                "6": "6",
                "7": "7",
                "8": "8",
                "9": "9",
                "10": "10",
                "11": "11",
                "12": "12",
                "13": "13",
                "14": "14",
                "15": "15",
                "16": "16",
                "17": "17",
                "18": "18",
                "19": "19",
                "20": "20"
            }
        },
        {
            "name": "retries",
            "type": "pickList",
            "label": "# of retries",
            "defaultValue": "3",
            "required": false,
            "groupName": "advancedCommon",
            "helpMarkDown": "Retries.\nNumber of HTTP retries.",
            "options": {
                "0": "0",
                "1": "1",
                "2": "2",
                "3": "3",
                "4": "4",
                "5": "5",
                "6": "6",
                "7": "7",
                "8": "8",
                "9": "9",
                "10": "10",
                "11": "11",
                "12": "12"
            }
        },
        {
            "name": "splitCount",
            "type": "pickList",
            "label": "# of splits",
            "defaultValue": "3",
            "required": false,
            "groupName": "advancedDownload",
            "helpMarkDown": "The number of segments into which each file should be split for download (provided the artifact is over the \"min split\" in size).\nTo download each file in a single thread, set to 0.",
            "options": {
                "0": "0",
                "1": "1",
                "2": "2",
                "3": "3",
                "4": "4",
                "5": "5",
                "6": "6",
                "7": "7",
                "8": "8",
                "9": "9",
                "10": "10",
                "12": "12",
                "14": "14",
                "16": "16",
                "18": "18",
                "20": "20",
                "25": "25",
                "30": "30",
                "35": "35",
                "40": "40",
                "45": "45",
                "50": "50",
                "60": "60",
                "70": "70",
                "80": "80",
                "90": "90",
                "100": "100"
            }
        },
        {
            "name": "minSplit",
            "type": "string",
            "label": "The minimum size in KB for splitting files",
            "defaultValue": "5120",
            "required": false,
            "visibleRule": "splitCount!=0",
            "groupName": "advancedDownload",
            "helpMarkDown": "Files larger than the specified number will be split into equally sized \"# of splits\" segments.\nAny files smaller than the specified number will be downloaded in a single thread. If set to -1, files are not split.\nThe default value is 5120"
        },
        {
            "name": "validateSymlinks",
            "type": "boolean",
            "label": "Validate symlinks are pointing to existing and unchanged files",
            "defaultValue": "false",
            "required": false,
            "groupName": "advancedDownload",
            "helpMarkDown": "Validation is done by comparing file's sha1.\nApplicable to files and not directories."
        },
        {
            "name": "syncDeletesPathLocal",
            "type": "string",
            "label": "Path to sync and delete files from in the local file system",
            "defaultValue": "",
            "required": false,
            "groupName": "advancedDownload",
            "helpMarkDown": "If you'd like to sync dependencies after the download, set a specific local file system path. Leave empty otherwise.\nIf set, after the download completes, this path will include only the dependencies downloaded during this download operation. The other files under this path will be deleted."
        },
        {
            "name": "preserveSymlinks",
            "type": "boolean",
            "label": "Preserve soft links structure in Artifactory",
            "defaultValue": "false",
            "required": false,
            "groupName": "advancedUpload",
            "helpMarkDown": "Select if you'd like that Symlink file representation will contain the symbolic link and checksum properties."
        },
        {
            "name": "setDebianProps",
            "type": "boolean",
            "label": "Set Debian properties",
            "defaultValue": "false",
            "required": false,
            "groupName": "advancedUpload",
            "helpMarkDown": "Select if you'd like to Specify the distribution/component/architecture of the package.\nUsed for Debian packages only."
        },
        {
            "name": "debDistribution",
            "type": "string",
            "label": "Distribution",
            "defaultValue": "",
            "required": true,
            "groupName": "advancedUpload",
            "visibleRule": "setDebianProps=true"
        },
        {
            "name": "debComponent",
            "type": "string",
            "label": "Component",
            "defaultValue": "",
            "required": true,
            "groupName": "advancedUpload",
            "visibleRule": "setDebianProps=true"
        },
        {
            "name": "debArchitecture",
            "type": "string",
            "label": "Architecture",
            "defaultValue": "",
            "required": true,
            "groupName": "advancedUpload",
            "visibleRule": "setDebianProps=true"
        },
        {
            "name": "syncDeletesPathRemote",
            "type": "string",
            "label": "Path to sync and delete files from in Artifactory",
            "defaultValue": "",
            "required": false,
            "groupName": "advancedUpload",
            "helpMarkDown": "If you'd like to sync artifacts after the upload, set a specific path in Artifactory. Leave empty otherwise.\nIf set, after the upload completes, this path will include only the artifacts uploaded during this upload operation. The other files under this path will be deleted."
        }
    ],
    "execution": {
        "Node10": {
            "target": "runGenericArtifacts.js"
        }
    }
}